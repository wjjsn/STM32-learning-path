/*
 * motor.c
 *
 *  Created on: Mar 28, 2025
 *      Author: 28584
 */

#include "motor.h"

void motorSet(uint8_t motor, uint8_t dir, uint8_t speed)
{
	GPIO_PinState in1, in2;
	switch(dir)
	{
		case MOTOR_FORWARD:
			in1 = GPIO_PIN_SET;//1
			in2 = GPIO_PIN_RESET;//0
			break;
		case MOTOR_BACKWARD:
			in1 = GPIO_PIN_RESET;//0
			in2 = GPIO_PIN_SET;//1
			break;
		case MOTOR_BREAK:
			in1 = GPIO_PIN_SET;//0
			in2 = GPIO_PIN_SET;//1
			break;
		case MOTOR_STOP:
			in1 = GPIO_PIN_RESET;//0
			in2 = GPIO_PIN_RESET;//0
			speed = 0;
	}
	if(motor == MOTOR_A)
	{
		HAL_GPIO_WritePin(AIN1_GPIO_Port, AIN1_Pin, in1);
		HAL_GPIO_WritePin(AIN2_GPIO_Port, AIN2_Pin, in2);
		//__HAL_TIM_SET_COMPARE(MOTOR_PWM_TIM, TIM_CHANNEL_1, speed);
	}
	if(motor == MOTOR_B)
	{
		HAL_GPIO_WritePin(BIN1_GPIO_Port, BIN1_Pin, in1);
		HAL_GPIO_WritePin(BIN2_GPIO_Port, BIN2_Pin, in2);
		//__HAL_TIM_SET_COMPARE(MOTOR_PWM_TIM, TIM_CHANNEL_2, speed);
	}

}

void Set_PWM_Frequency(uint32_t frequency)
{
    // 计算新的ARR值（假设时钟源为72MHz，Prescaler固定为0）
    uint32_t timer_clock = 72000000;  // 定时器时钟频率
    uint32_t new_arr = (timer_clock / frequency) - 1;

    // 修改ARR并触发更新事件
    __HAL_TIM_SET_AUTORELOAD(&htim1, new_arr);
    __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, new_arr / 2); // 保持占空比
    HAL_TIM_GenerateEvent(&htim1, TIM_EVENTSOURCE_UPDATE);      // 立即生效
}
